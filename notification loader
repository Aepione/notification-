local okmodule = {}

-- Function to check if the notification GUI exists
function CheckNotifGuiP()
    pcall(function()
        if not game.CoreGui:FindFirstChild("NotificationGui") then
            local NotificationGui = Instance.new("ScreenGui")
            local Frame = Instance.new("Frame")
            local UIListLayout = Instance.new("UIListLayout")
            
            -- Setting up GUI properties
            NotificationGui.Name = "NotificationGui"
            NotificationGui.Parent = game.CoreGui
            NotificationGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
            
            Frame.Parent = NotificationGui
            Frame.BackgroundTransparency = 1
            Frame.Position = UDim2.new(0.7, 0, 0.1, 0)
            Frame.Size = UDim2.new(0, 300, 0, 500)
            
            UIListLayout.Parent = Frame
            UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
            UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
            UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        end
    end)
end

-- Function to create a new notification
function okmodule:NewNotification(ntdata)
    CheckNotifGuiP()

    pcall(function()
        -- Instances for the notification
        local TextNotification = Instance.new("Frame")
        local Design = Instance.new("Frame")
        local UICorner = Instance.new("UICorner")
        local Title = Instance.new("TextLabel")
        local Description = Instance.new("TextLabel")
        local DropShadowHolder = Instance.new("Frame")
        local DropShadow = Instance.new("ImageLabel")
        local CloseButton = Instance.new("TextButton")
        local Icon = Instance.new("ImageLabel")
        local Line = Instance.new("Frame")

        -- Setting up notification properties
        TextNotification.Name = "TextNotification"
        TextNotification.Parent = game.CoreGui["NotificationGui"].Frame
        TextNotification.BackgroundTransparency = 1
        TextNotification.Size = UDim2.new(0, 0, 0, 67)
        TextNotification.Visible = false
        
        Design.Name = "Design"
        Design.Parent = TextNotification
        Design.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
        Design.Size = UDim2.new(0, 276, 0, 60)

        UICorner.CornerRadius = UDim.new(0, 4)
        UICorner.Parent = Design

        Title.Name = "Title"
        Title.Parent = Design
        Title.Text = ntdata["Title"]
        Title.Font = Enum.Font.FredokaOne
        Title.TextColor3 = Color3.fromRGB(255, 255, 255)
        Title.TextSize = 15
        Title.TextXAlignment = Enum.TextXAlignment.Left
        Title.Size = UDim2.new(0, 225, 0, 26)

        Description.Name = "Description"
        Description.Parent = Design
        Description.Text = ntdata["Description"]
        Description.Font = Enum.Font.SourceSansSemibold
        Description.TextColor3 = Color3.fromRGB(255, 255, 255)
        Description.TextSize = 13
        Description.Size = UDim2.new(0, 225, 0, 34)
        Description.TextWrapped = true

        -- Drop shadow
        DropShadowHolder.Name = "DropShadowHolder"
        DropShadowHolder.Parent = Design
        DropShadowHolder.Size = UDim2.new(1, 0, 1, 0)
        DropShadow.Image = "rbxassetid://6014261993"
        DropShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
        DropShadow.ImageTransparency = 0.5
        DropShadow.Size = UDim2.new(1, 47, 1, 47)
        DropShadow.Parent = DropShadowHolder

        -- Close button
        CloseButton.Name = "CloseButton"
        CloseButton.Parent = Design
        CloseButton.Text = "X"
        CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        CloseButton.TextSize = 14
        CloseButton.Size = UDim2.new(0, 21, 0, 18)
        CloseButton.Position = UDim2.new(0.92, 0, 0.07, 0)
        CloseButton.BackgroundTransparency = 1

        -- Event to close notification
        CloseButton.MouseButton1Click:Connect(function()
            local tween = game:GetService("TweenService"):Create(TextNotification, TweenInfo.new(0.2), {Size = UDim2.new(0, 0, 0, 67)})
            tween:Play()
            tween.Completed:Wait()
            TextNotification:Destroy()
        end)

        -- Notification icon handling
        Icon.Name = "Icon"
        Icon.Parent = Design
        Icon.Size = UDim2.new(0, 45, 0, 45)
        Icon.Position = UDim2.new(0.02, 0, 0.1, 0)

        local Mode = ntdata["Mode"]:lower()
        if Mode == "success" then
            Icon.Image = "http://www.roblox.com/asset/?id=14364891416" -- Success icon
        elseif Mode == "error" then
            Icon.Image = "http://www.roblox.com/asset/?id=14364906490" -- Error icon
        elseif Mode == "info" then
            Icon.Image = "http://www.roblox.com/asset/?id=14364940062" -- Info icon
        elseif Mode == "custom" and ntdata["Notification_Image"] then
            Icon.Image = ntdata["Notification_Image"]
        else
            Icon.Image = "http://www.roblox.com/asset/?id=14364940062" -- Default info icon
        end

        -- Line for timeout
        Line.Name = "Line"
        Line.Parent = Design
        Line.Size = UDim2.new(0, 276, 0, 1)
        Line.Position = UDim2.new(1, 0, 1, 0)
        Line.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

        if ntdata["Timeout"] ~= false then
            local tweenLine = game:GetService("TweenService"):Create(Line, TweenInfo.new(ntdata["Timeout"]), {Size = UDim2.new(0, 0, 0, 1)})
            tweenLine:Play()
        end

        -- Showing the notification with a tween
        local openTween = game:GetService("TweenService"):Create(TextNotification, TweenInfo.new(0.2), {Size = UDim2.new(0, 283, 0, 67)})
        openTween:Play()
        TextNotification.Visible = true

        -- Destroy after timeout
        if ntdata["Timeout"] ~= false then
            wait(ntdata["Timeout"] + 0.25)
            openTween = game:GetService("TweenService"):Create(TextNotification, TweenInfo.new(0.2), {Size = UDim2.new(0, 0, 0, 67)})
            openTween:Play()
            openTween.Completed:Wait()
            TextNotification:Destroy()
        end
    end)
end

return okmodule
